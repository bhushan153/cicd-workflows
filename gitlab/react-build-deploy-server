stages:
  - build
  - deploy

# Cache dependencies to speed up the build process
cache:
  paths:
    - node_modules/

# Define the build job
build-job:
  image: node:18 # You can specify the version of Node.js you're using
  stage: build
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/ # Save the build directory for deployment

# Define the deploy job
deploy-job:
  image: alpine:latest  # Use a lightweight image for deployment
  stage: deploy
  environment: production
  dependencies:
    - build-job  # Ensure deploy-job runs after build-job
  before_script:
    - apk add --no-cache openssh sshpass  # Install necessary packages in Alpine Linux
  script:
    # Use sshpass to securely copy the build files to the server
    - sshpass -p "${SERVER_PASSWORD}" scp -o StrictHostKeyChecking=no -r dist/* ${SERVER_USERNAME}@${SERVER_HOSTNAME}:${SERVER_PATH}
  only:
    - dev  # Only deploy from the main branch
